plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_18
targetCompatibility = JavaVersion.VERSION_18

archivesBaseName = project.mod_id
version = project.mod_version
group = project.maven_group

repositories {

	// Geckolib
	maven {
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}

	// SatinAPI
	maven {
		url 'https://ladysnake.jfrog.io/artifactory/mods/'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}

	// ClothConfig
	maven {
		url "https://maven.shedaniel.me/"
	}

	// ModMenu
	maven {
		url "https://maven.terraformersmc.com/releases/"
	}

	// LooseEndsLib
	maven {
		url "https://jitpack.io/"
	}

}

dependencies {

	// Loader
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// FabricAPI
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	include "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Geckolib
	modImplementation "software.bernie.geckolib:geckolib-fabric-${project.geckolib_version}"
	include "software.bernie.geckolib:geckolib-fabric-${project.geckolib_version}"

	// SatinAPI
	modImplementation "io.github.ladysnake:satin:${project.satinapi_version}"
	include "io.github.ladysnake:satin:${project.satinapi_version}"

	// ClothConfig
	modApi ("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
		exclude group: "net.fabricmc.fabric-api"
	}
	include "me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}"

	// ModMenu
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

	// LooseEndsLib
	modImplementation "com.github.Totobird-Creations:LooseEndsLib:${project.looseendslib_version}"
	include "com.github.Totobird-Creations:LooseEndsLib:${project.looseendslib_version}"

}

processResources {
	filesMatching(["**/*.properties", "**/*.json", "**/*.mcmeta"]) {
		expand  "id"      : project.mod_id,
				"name"    : project.mod_name,
				"version" : project.mod_version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 18
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {}
}
